{"version":3,"sources":["components/Navbar.tsx","components/CardCharacter.tsx","components/ListCharacter.tsx","components/Loader.tsx","components/Search.tsx","API/config.js","pages/Home.tsx","components/CardEpisodeProfile.tsx","components/EpisodesProfile.tsx","pages/profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","id","CardCharacter","character","Card","src","image","alt","style","fontWeight","name","status","species","location","episode","length","styled","div","ListCharacter","characters","map","char","key","to","textDecoration","Loader","Search","searchCharacter","useState","inputsearch","setInputSearch","ContentSearch","type","placeholder","onChange","value","target","onClick","API","axios","create","baseURL","Home","data","setdata","setCharacters","isLoader","setisLoader","errorsearch","setErrorSearch","useEffect","getCharacter","a","get","response","console","log","results","alert","minHeight","CardEpisodeProfile","openinfo","setOpenInfo","cursor","textAlign","marginBottom","fontSize","air_date","EpisodesProfile","episodes","Profile","useParams","url","origin","setEpisodes","episodesUrls","episodesIds","parseInt","split","pop","getEpisodes","push","CardContent","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fba74a6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    Rick and Morty App\r\n                </a>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        {/* <a href=\"\">Hola world</a> */}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\nimport { BsFillRecordCircleFill } from 'react-icons/bs'\r\n\r\nimport { Characters } from '../interfaces/Character'\r\n\r\ninterface Props {\r\n    character: Characters\r\n}\r\n\r\nexport default function CardCharacter({ character }: Props) {\r\n\r\n    return (\r\n        <Card className=\"card bg-secondary text-dark\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <img src={character.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"p-3\">\r\n                        <h3 style={{ fontWeight: 'bold' }}>{character.name} </h3>\r\n                        <p >\r\n                            <BsFillRecordCircleFill\r\n                                className={character.status === 'Alive' ? 'text-success' : 'text-danger'}\r\n                            />\r\n                            <span className='mx-2'>{character.status} - {character.species} </span>\r\n                        </p>\r\n                        <p>\r\n                            Last known location: <br />\r\n                            <span>{character.location.name}</span>\r\n                        </p>\r\n                        <p>\r\n                            Episodes <br />\r\n                            <span className='badge bg-primary'>\r\n                                <b>{character.episode.length}</b>\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Card >\r\n    )\r\n}\r\n\r\nconst Card = styled.div`\r\n    cursor: pointer;\r\n    h3 {\r\n        font-size: 1.3em;\r\n    }\r\n    img {\r\n        width: 100%;\r\n        min-height: 300px;\r\n        object-fit: cover;\r\n    }\r\n    p {\r\n        font-size: 1.1em;\r\n        font-weight: 700;\r\n        span {\r\n            font-weight: normal;\r\n        }\r\n    }\r\n`","import { Characters } from '../interfaces/Character'\r\nimport CardCharacter from './CardCharacter'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface Props {\r\n    characters: Characters[]\r\n}\r\nexport default function ListCharacter({ characters }: Props) {\r\n    return (\r\n        <>\r\n            {characters.map((char, key) => (\r\n                <div className=\"col-md-4 my-3\">\r\n                    <Link to={`/profile/${char.id}`} style={{ textDecoration: 'none' }}>\r\n                        <CardCharacter character={char} />\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n\r\n        </>\r\n    )\r\n}\r\n","\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n","\r\nimport { ChangeEvent, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { SearchInterface } from '../interfaces/SearchInterface'\r\n\r\ntype TypeInputChange = ChangeEvent<HTMLInputElement>\r\n\r\n\r\ninterface Props {\r\n    searchCharacter: (inputsearch: SearchInterface) => void\r\n}\r\n\r\nexport default function Search({ searchCharacter }: Props) {\r\n\r\n    const [inputsearch, setInputSearch] = useState<string>('')\r\n\r\n\r\n    const hanldeChange = ({ target: { value } }: TypeInputChange) => {\r\n        setInputSearch(value)\r\n    }\r\n\r\n    const hanldeSearch = () => {\r\n        searchCharacter({ inputsearch })\r\n    }\r\n\r\n\r\n    return (\r\n        <ContentSearch className=\"mx-auto\">\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search Character\"\r\n                        className=\"form-control mb-3 shadow-none border-0\"\r\n                        onChange={hanldeChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col\" onClick={() => hanldeSearch()}>\r\n                    <button className=\"btn btn-primary d-block w-100 shadow-none\">Search</button>\r\n                </div>\r\n            </div>\r\n        </ContentSearch>\r\n    )\r\n}\r\n\r\n\r\nconst ContentSearch = styled.div`\r\n    width: 50%;\r\n    @media screen and (max-width: 600px) {\r\n        width: 100%;\r\n    }\r\n`","import axios from \"axios\";\r\n\r\nexport const baseURL = \"https://rickandmortyapi.com/api/\";\r\n\r\nexport const API = axios.create({\r\n  baseURL: baseURL,\r\n});\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ListCharacter from \"../components/ListCharacter\";\r\nimport Loader from \"../components/Loader\";\r\nimport Search from \"../components/Search\";\r\nimport { Characters } from \"../interfaces/Character\";\r\nimport { SearchInterface } from '../interfaces/SearchInterface'\r\n\r\n\r\nimport { API } from \"../API/config\";\r\n\r\ninterface ResponseApi {\r\n    data: Object\r\n}\r\n\r\nexport default function Home() {\r\n    const [data, setdata] = useState<ResponseApi>({ data: {} })\r\n    const [characters, setCharacters] = useState<Characters[]>([])\r\n    const [isLoader, setisLoader] = useState(true)\r\n\r\n    const [errorsearch, setErrorSearch] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getCharacter()\r\n\r\n    }, [])\r\n\r\n\r\n    const getCharacter = async () => {\r\n        setisLoader(true)\r\n\r\n        try {\r\n            const response = await API.get('character')\r\n            console.log(\"characters,\")\r\n\r\n            setdata(response.data)\r\n            setCharacters(response.data.results)\r\n            setisLoader(false)\r\n        } catch (error) {\r\n            alert('ha ocurrido un error')\r\n            setisLoader(false)\r\n        }\r\n    }\r\n\r\n    const searchCharacter = async ({ inputsearch }: SearchInterface) => {\r\n        setisLoader(true)\r\n        try {\r\n            const response = await API.get(`character/?name=${inputsearch}`)\r\n            console.log(response, 'response buscando characters')\r\n            setisLoader(false)\r\n\r\n            setdata(response.data)\r\n            setCharacters(response.data.results)\r\n            setErrorSearch(false)\r\n        } catch (error) {\r\n            setErrorSearch(true)\r\n            setisLoader(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const resetSearch = () => {\r\n        getCharacter()\r\n        setErrorSearch(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main className=\"bg-dark\" style={{ minHeight: '100vh' }}>\r\n                <div className=\"container-fluid\">\r\n                    <h1 className=\"text-white py-4 text-center\">Rick and Morty App with<br /> React.js + TypeScript</h1>\r\n\r\n                    <Search searchCharacter={searchCharacter} />\r\n\r\n                    {\r\n                        errorsearch && (\r\n                            <div className=\"w-50 mx-auto\">\r\n                                <div className=\"alert alert-dismissible alert-danger text-center\">\r\n                                    <b>Character not found</b> <a href=\"#\" className=\"alert-link\"\r\n                                        onClick={() => resetSearch()}\r\n                                    >to reset\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                    {isLoader ?\r\n                        <div className=\"text-center\"><Loader /></div>\r\n                        : (\r\n                            <>\r\n                                <h2 className=\"text-white pt-4\">Caracteres</h2>\r\n                                <div className=\"row\">\r\n                                    <ListCharacter characters={characters} />\r\n                                </div>\r\n                                <div className=\"pb-5 mx-auto w-100\">\r\n                                    <ul className=\"pagination pagination-sm mx-auto\">\r\n                                        <li className=\"page-item disabled\">\r\n                                            <a className=\"page-link\" href=\"#\">&laquo;</a>\r\n                                        </li>\r\n                                        {/* <li className=\"page-item active\">\r\n                                            <a className=\"page-link\" href=\"#\">1</a>\r\n                                        </li>\r\n                                        <li className=\"page-item\">\r\n                                            <a className=\"page-link\" href=\"#\">2</a>\r\n                                        </li>\r\n                                        <li className=\"page-item\">\r\n                                            <a className=\"page-link\" href=\"#\">3</a>\r\n                                        </li>\r\n                                        <li className=\"page-item\">\r\n                                            <a className=\"page-link\" href=\"#\">4</a>\r\n                                        </li>\r\n                                        <li className=\"page-item\">\r\n                                            <a className=\"page-link\" href=\"#\">5</a>\r\n                                        </li> */}\r\n                                        <li className=\"page-item\">\r\n                                            <a className=\"page-link\" href=\"#\">&raquo;</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport { RiArrowDownSLine } from 'react-icons/ri'\r\n\r\n\r\ninterface Props {\r\n    data: {\r\n        name: string;\r\n        episode: string\r\n        air_date: string\r\n    }\r\n}\r\n\r\nexport default function CardEpisodeProfile({ data }: Props) {\r\n\r\n\r\n    const [openinfo, setOpenInfo] = useState<boolean>(false)\r\n\r\n    const openInfo = () => setOpenInfo(!openinfo)\r\n\r\n\r\n    return (\r\n        <span className='d-block bg-primary w-100 my-4 card text-center py-2 text-white px-4'\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => openInfo()}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-10 col-md-10\" style={{ textAlign: 'left' }}>\r\n                    <h5 className=\"text-white\" style={{ marginBottom: '0 !important' }}>\r\n                        <b>{data.name}</b>\r\n                    </h5>\r\n                </div>\r\n                <div className=\"col-2 col-md-2\">\r\n                    <RiArrowDownSLine\r\n                        style={{ fontSize: '2em' }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {\r\n                openinfo && (\r\n                    <div className=\"row pt-4\">\r\n                        <div className=\"col\">\r\n                            Code: {\" \"}\r\n                            <b>{data.episode}</b>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            Date: {\" \"}\r\n                            <b>{data.air_date}</b>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </span>\r\n    )\r\n}\r\n","import CardEpisodeProfile from './CardEpisodeProfile'\r\n\r\nexport default function EpisodesProfile({ episodes }: any | null) {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                episodes.map((data: any, key: number) => (\r\n                    <CardEpisodeProfile data={data} key={key} />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { API } from '../API/config'\r\nimport { BsFillRecordCircleFill } from 'react-icons/bs';\r\nimport Loader from '../components/Loader';\r\nimport EpisodesProfile from '../components/EpisodesProfile';\r\n// import { Characters } from \"../interfaces/Character\";\r\n\r\n\r\ninterface Characters {\r\n    name: string\r\n    id: number\r\n    image: string\r\n    status: string\r\n    species: string\r\n    location: {\r\n        name: string\r\n        url: string\r\n    }\r\n    origin: {\r\n        name: string,\r\n        url: string\r\n    },\r\n    episode: []\r\n}\r\ninterface EpisodesInterface {\r\n    substring(arg0: number, arg1: number): any;\r\n    name: ''\r\n}\r\n\r\ninterface Episodes {\r\n    name: string;\r\n    url: string;\r\n}\r\n\r\nconst getEpisodesIds = (episodesUrls: string[]): number[] => {\r\n    return episodesUrls.map(url => parseInt(url.split('/').pop()!))\r\n}\r\n\r\nexport default function Profile() {\r\n    const { id } = useParams();\r\n\r\n    const [character, setCharacters] = useState<Characters>({\r\n        name: '',\r\n        id: 0,\r\n        image: '',\r\n        status: '',\r\n        species: '',\r\n        location: {\r\n            name: '',\r\n            url: ''\r\n        },\r\n        origin: {\r\n            name: '',\r\n            url: ''\r\n        },\r\n        episode: []\r\n    })\r\n\r\n    const [episodes, setEpisodes] = useState<[]>([])\r\n    const [isLoader, setisLoader] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        getCharacter()\r\n    }, [])\r\n\r\n\r\n    const getCharacter = async () => {\r\n        setisLoader(true)\r\n        try {\r\n            const response = await API.get(`character/${id}`)\r\n\r\n            // obtener los episodios id\r\n            const episodesIds = getEpisodesIds(response.data.episode)\r\n\r\n            // obtener characteres\r\n            setCharacters(response.data)\r\n            setisLoader(false)\r\n\r\n            // traer informacion de episodios\r\n            getEpisodes(episodesIds)\r\n\r\n        } catch (error) {\r\n            alert('error')\r\n            setisLoader(false)\r\n        }\r\n    }\r\n\r\n    const getEpisodes = async (episodesIds: number[]) => {\r\n        setisLoader(true)\r\n\r\n        try {\r\n            const response = await API.get(`episode/${episodesIds}`)\r\n\r\n            console.log(response.data)\r\n\r\n            if (response.data.length > 1) {\r\n                setEpisodes(response.data)\r\n            } else {\r\n                let data: any = []\r\n                data.push(response.data)\r\n                console.log(data, 'data klk')\r\n                setEpisodes(data)\r\n            }\r\n            setisLoader(false)\r\n\r\n        } catch (error) {\r\n            alert('error en episodios')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <main className=\"bg-dark text-white\" style={{ minHeight: '100vh' }}>\r\n            <div className=\"container-fluid\">\r\n                <Link\r\n                    to=\"/\"\r\n                    className='py-4  text-white d-block'\r\n                    style={{ fontSize: '1.5em' }}>\r\n                    <b>Go back</b>\r\n                </Link>\r\n                <CardContent>\r\n                    {isLoader && (\r\n                        <div className='w-100 text-center'><Loader /></div>\r\n                    )}\r\n                    {\r\n                        !isLoader && (\r\n                            <>\r\n                                <div className='image'><img src={character.image} alt=\"\" /></div>\r\n                                <h2 style={{ fontWeight: 'bold' }} className='text-white text-center mt-3'>\r\n                                    {character.name}\r\n                                </h2>\r\n                                <div className=\"card\">\r\n                                    <div className=\"p-3\">\r\n                                        <p >\r\n                                            <BsFillRecordCircleFill\r\n                                                className={character.status === 'Alive' ? 'text-success' : 'text-danger'}\r\n                                            />\r\n                                            <span className='mx-2'>{character.status} - {character.species} </span>\r\n                                        </p>\r\n                                        <h4>Origin</h4>\r\n                                        <p>{character.origin.name}</p>\r\n                                        <h4>Episodes</h4>\r\n                                        {\r\n                                            episodes.length > 0 && (\r\n                                                <EpisodesProfile episodes={episodes} />\r\n\r\n                                            )}\r\n                                        <p>\r\n                                            Last known location: <br />\r\n                                            <span>{character.location.name}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </CardContent>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nconst CardContent = styled.div`\r\n    .image {\r\n        width: 100%;\r\n        border-radius: 200px;\r\n        text-align: center;\r\n        img {\r\n            border-radius: inherit;\r\n        }\r\n    }\r\n    .card {\r\n        width: 50%;\r\n        margin: 2em auto;\r\n        color: #343a40;\r\n        h4 {\r\n            font-weight: bold;\r\n        }\r\n        p {\r\n            font-size: 1.2em;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 600px) {\r\n        .card {\r\n            width: 100%;\r\n        }\r\n    }\r\n` ","import { FC } from 'react'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Home from './pages/Home'\nimport Profile from './pages/profile'\n\nconst App: FC = () => {\n  return (\n    <>\n      <Navbar />\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/profile/:id\" element={<Profile />} />\n        </Routes>\n      </Router>\n    </>\n  )\n}\n\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootswatch/dist/zephyr/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}